{
  "name": "Pypro4sail",
  "tagline": "Prospect5 and 4SAIL Radiative Transfer Models for simulating the transmission of radiation in leaves and canopies",
  "body": "# pyPro4Sail\r\nProspect5 and 4SAIL Radiative Transfer Models for simulating the transmission of radiation in leaves and canopies.\r\n\r\n## Synopsis\r\n\r\nThis project contains *Python* code for *Prospect* and *4SAIL* Radiative Transfer Models (**RTM**)\r\nfor simulating the transmission of optical and thermal electromagnetic radiation through \r\nleaves and vegetated canopies.\r\n\r\nThe project consists of: \r\n\r\n1. lower-level modules with the basic functions needed in *Prospec5* and *4SAIL* RTMs.\r\n\r\n2. higher-level scripts for easily running ProSAIL in both forward and inverse mode.\r\n\r\n## Installation\r\n\r\nDownload the project to your local system, enter the download directory and then type.\r\n\r\n`python setup.py install` \r\n\r\nif you want to install pyTSEB and its low-level modules in your Python distribution. \r\n\r\nThe following Python library ir required for running Prospect and 4SAIL:\r\n\r\n- Numpy\r\n\r\nIn addition, the inversion of both RTMS requires.\r\n\r\n- Scipy\r\n\r\n- cma [Optional]\r\n\r\n\r\n## Code Example\r\n### High-level example\r\nYou can automatically run the coupled leaf+canopyt Prospect5+4SAIL RTM with *pyPro4Sail.py* module.\r\n\r\n```python\r\n[N, chloro, caroten, brown, EWT, LMA, LAI, hot_spot, solar_zenith, solar_azimuth, view_zenith, view_azimuth, LIDF]=[1.5,40,8,0.0,0.01,0.009,3,0.01,30,180,10,180,(-0.35,-0.15)]\r\nimport pyPro4SAIL\r\nwl,rho=pyPro4SAIL.run(N, chloro, caroten, brown, EWT, LMA, LAI, hot_spot, solar_zenith, solar_azimuth, view_zenith, view_azimuth, LIDF, skyl=0.2, soilType=pyPro4SAIL.DEFAULT_SOIL)\r\n```\r\n\r\nAlso it is possible to simulate the surface land-leaving thermal radiance with the function `run_TIR`.\r\n\r\n### Low-level example\r\n#### Prospect5 RTM\r\nYou can run *Prospect* by importing the module Prospect5.py and then either calling the function `Prospect5` \r\nfor simulating the full optical spectrum (400-2500nm), or the function `Prospect5_wl` for simulating\r\nthe leaf reflectance and transmittance for a given wavelength.\r\n\r\n```python\r\n# Running Prospect5\r\nimport Prospect5\r\n# Simulate leaf full optical spectrum (400-2500nm) \r\nwl, rho_leaf, tau_leaf = Prospect5.Prospect5(N, chloro, caroten, brown, EWT, LMA)\r\n\r\n```\r\n\r\nYou can type\r\n`help(Prospect5.Prospect5)`\r\nto understand better the inputs needed and the outputs returned\r\n\r\n#### 4SAIL RTM\r\nYou can run *4SAIL* by importing the module FourSAIL.py and then either calling the function `FourSAIL` \r\nfor simulating the reflectance and transmittance factor of a given canopy given a list of leaf reflectances \r\nand trasmittances, or you can call the function `FourSAIL_wl` for simulating the leaf reflectance and transmittance \r\nfactor of a given canopy at for a single wavelenght.\r\n\r\n```python\r\n# Running the coupled Prospect and 4SAIL\r\nimport Prospect5, FourSAIL\r\n# Simulate leaf full optical spectrum (400-2500nm) \r\nwl, rho_leaf, tau_leaf = Prospect5.Prospect5(N, chloro, caroten, brown, EWT, LMA)\r\n# Estimate the Leaf Inclination Distribution Function of a canopy\r\nLIDF = FourSAIL.CalcLIDF_Campbell(alpha)\r\n# Simulate leaf reflectance and transmittance factors of a canopy \r\ntss,too,tsstoo,rdd,tdd,rsd,tsd,rdo,tdo,rso,rsos,rsod,rddt,rsdt,rdot,rsodt,rsost,rsot,gammasdf,gammasdb,gammasowl = FourSAIL.FourSAIL(LAI,hot_spot,LIDF,solar_zenith,view_zenith,solar_azimuth-view_azimuth,rho_leaf,tau_leaf,rho_soil)\r\n# Simulate the canopy reflectance factor for a given difuse/total radiation condition (skyl)\r\nrho_canopy = rdot*skyl+rsot*(1-skyl)\r\n``` \r\n\r\nYou can type\r\n`help(FourSAIL.FourSAIL)`\r\nto understand better the inputs needed and the outputs returned\r\n   \r\n## Basic Contents\r\n### High-level modules\r\n- *.src/pyPro4SAIL.py*\r\n> Runs the coupled Prospect5+4SAIL to estimate the canopy directional reflectance factor and 4SAIL to estimate the land-leaving broadband thermal radiance.\r\n\r\n### Low-level modules\r\nThe low-level modules in this project are aimed at providing customisation and more flexibility in running TSEB. \r\nThe following modules are included.\r\n\r\n- *.src/Prospect5.py*\r\n> core functions for running Prospect5 Leaf Radiative Transfer Model. \r\n\r\n- *.src/Prospect5Jacobian.py*\r\n> core functions for computing the Jacobian of Prospect5 Leaf Radiative Transfer Model. \r\n\r\n- *.src/FourSAIL.py*\r\n> core functions for running 4SAIL Canopy Radiative Transfer Model.\r\n\r\n- *.src/FourSAILJacobian.py*\r\n> core functions for computing the Jacobian of 4SAIL Canopy Radiative Transfer Model.\r\n\r\n- *.src/CostFunctionsPROSPECT4SAIL.py*\r\n> merit functions used to invert Prospect and/or 4SAIL from a given spectrum\r\n\r\n- *.src/cma.py*\r\n> Covariance Matrix Adaptation Evolution Strategy optimization method for inverting Prospect5 and/or 4SAIL.\r\n\r\n\r\n## API Reference\r\nhttp://pyPro4Sail.readthedocs.org/en/latest/index.html\r\n\r\n## Main Scientific References\r\n- S. Jacquemoud, F. Baret, PROSPECT: A model of leaf optical properties spectra, Remote Sensing of Environment, Volume 34, Issue 2, November 1990, Pages 75-91, ISSN 0034-4257, http://dx.doi.org/10.1016/0034-4257(90)90100-Z.\r\n- Jean-Baptiste Feret, Christophe François, Gregory P. Asner, Anatoly A. Gitelson, Roberta E. Martin, Luc P.R. Bidel, Susan L. Ustin, Guerric le Maire, Stéphane Jacquemoud, PROSPECT-4 and 5: Advances in the leaf optical properties model separating photosynthetic pigments, Remote Sensing of Environment, Volume 112, Issue 6, 16 June 2008, Pages 3030-3043, ISSN 0034-4257, http://dx.doi.org/10.1016/j.rse.2008.02.012.\r\n- W. Verhoef, Light scattering by leaf layers with application to canopy reflectance modeling: The SAIL model, Remote Sensing of Environment, Volume 16, Issue 2, October 1984, Pages 125-141, ISSN 0034-4257, http://dx.doi.org/10.1016/0034-4257(84)90057-9.\r\n- W. Verhoef, L. Jia, Q. Xiao and Z. Su, Unified Optical-Thermal Four-Stream Radiative Transfer Theory for Homogeneous Vegetation Canopies, IEEE Transactions on Geoscience and Remote Sensing, vol. 45, no. 6, pp. 1808-1822, June 2007. http://dx.doi.org/10.1109/TGRS.2007.895844.\r\n\r\n## Tests\r\n*to be included*\r\n\r\n## Contributors\r\n- **Hector Nieto** <hnieto@ias.csic.es> <hector.nieto.solana@gmail.com> main developer\r\n- **Radoslaw Guzinski** \r\n- **Robin Wilson** <robin@rtwilson.com> main developer of pyProSail <https://github.com/robintw/PyProSAIL>\r\n\r\n## License\r\npyPro4Sail: a Python Two Source Energy Balance Model\r\n\r\nCopyright 2016 Hector Nieto and contributors.\r\n    \r\nThis program is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nThis program is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU General Public License for more details.\r\n\r\nYou should have received a copy of the GNU General Public License\r\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}